{"ast":null,"code":"var _jsxFileName = \"/Users/user1/freelanceing/reactAssignment/src/components/Screen.jsx\";\nimport React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { Pagination } from \"@material-ui/lab\";\nimport _ from \"lodash\";\nimport Search from \"./Search\";\nimport MovieList from \"./MovieList\";\nimport Modal from \"./Modal\";\nimport { searchMovies, fetchMovieInfo } from \"./../apis/obdb\";\n\nclass Screen extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      year: \"\",\n      movies: [],\n      page: 1,\n      movieInfo: {},\n      visible: false\n    };\n\n    this.handleTitleChange = e => {\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.handleYearChange = e => {\n      this.setState({\n        year: e.target.value\n      });\n    };\n\n    this.handleSearch = () => {\n      this.setState({\n        page: 1\n      }, this.fetchMovies);\n    };\n\n    this.handlePageChange = (e, page) => {\n      this.setState({\n        page\n      }, this.fetchMovies);\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        visible: false,\n        movieInfo: {}\n      });\n    };\n\n    this.fetchMovies = async () => {\n      const {\n        title,\n        year,\n        page\n      } = this.state;\n      const res = await searchMovies(title, year, page);\n      this.setState({\n        movies: res\n      });\n    };\n\n    this.fetchMoreInfo = async imdbID => {\n      this.setState({\n        visible: true\n      });\n      const res = await fetchMovieInfo(imdbID);\n      this.setState({\n        movieInfo: res\n      });\n    };\n\n    this.renderFooter = () => {\n      const {\n        movies,\n        page\n      } = this.state;\n\n      const count = _.floor(_.divide(_.get(movies, \"totalResults\", 0), 10));\n\n      return count ? /*#__PURE__*/React.createElement(Pagination, {\n        page: page,\n        count: count + 1,\n        color: \"primary\",\n        onChange: this.handlePageChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }) : \"\";\n    };\n  }\n\n  render() {\n    const {\n      showPoster\n    } = this.props;\n    const {\n      title,\n      year,\n      movies,\n      visible,\n      movieInfo\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Box, {\n      p: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Search, {\n      title: title,\n      year: year,\n      onTitleChange: this.handleTitleChange,\n      onYearChange: this.handleYearChange,\n      onSearch: this.handleSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(MovieList, {\n      showPoster: showPoster,\n      movies: movies,\n      pageSize: 10,\n      onPaginationChange: this.fetchMovies,\n      footer: this.renderFooter,\n      showMoreInfo: this.fetchMoreInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      movie: movieInfo,\n      open: visible,\n      onClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Screen;","map":{"version":3,"sources":["/Users/user1/freelanceing/reactAssignment/src/components/Screen.jsx"],"names":["React","Box","Pagination","_","Search","MovieList","Modal","searchMovies","fetchMovieInfo","Screen","PureComponent","state","title","year","movies","page","movieInfo","visible","handleTitleChange","e","setState","target","value","handleYearChange","handleSearch","fetchMovies","handlePageChange","handleClose","res","fetchMoreInfo","imdbID","renderFooter","count","floor","divide","get","render","showPoster","props"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Box } from \"@material-ui/core\";\nimport { Pagination } from \"@material-ui/lab\";\nimport _ from \"lodash\";\n\nimport Search from \"./Search\";\nimport MovieList from \"./MovieList\";\nimport Modal from \"./Modal\";\nimport { searchMovies, fetchMovieInfo } from \"./../apis/obdb\";\n\nclass Screen extends React.PureComponent {\n  state = {\n    title: \"\",\n    year: \"\",\n    movies: [],\n    page: 1,\n    movieInfo: {},\n    visible: false,\n  };\n\n  handleTitleChange = (e) => {\n    this.setState({\n      title: e.target.value,\n    });\n  };\n\n  handleYearChange = (e) => {\n    this.setState({\n      year: e.target.value,\n    });\n  };\n\n  handleSearch = () => {\n    this.setState({ page: 1 }, this.fetchMovies);\n  };\n\n  handlePageChange = (e, page) => {\n    this.setState({ page }, this.fetchMovies);\n  };\n\n  handleClose = () => {\n    this.setState({\n      visible: false,\n      movieInfo: {},\n    });\n  };\n\n  fetchMovies = async () => {\n    const { title, year, page } = this.state;\n    const res = await searchMovies(title, year, page);\n    this.setState({ movies: res });\n  };\n\n  fetchMoreInfo = async (imdbID) => {\n    this.setState({ visible: true });\n    const res = await fetchMovieInfo(imdbID);\n    this.setState({ movieInfo: res });\n  };\n\n  renderFooter = () => {\n    const { movies, page } = this.state;\n    const count = _.floor(_.divide(_.get(movies, \"totalResults\", 0), 10));\n\n    return count ? (\n      <Pagination\n        page={page}\n        count={count + 1}\n        color=\"primary\"\n        onChange={this.handlePageChange}\n      />\n    ) : (\n      \"\"\n    );\n  };\n\n  render() {\n    const { showPoster } = this.props;\n    const { title, year, movies, visible, movieInfo } = this.state;\n    return (\n      <Box p={3}>\n        <Search\n          title={title}\n          year={year}\n          onTitleChange={this.handleTitleChange}\n          onYearChange={this.handleYearChange}\n          onSearch={this.handleSearch}\n        />\n        <MovieList\n          showPoster={showPoster}\n          movies={movies}\n          pageSize={10}\n          onPaginationChange={this.fetchMovies}\n          footer={this.renderFooter}\n          showMoreInfo={this.fetchMoreInfo}\n        />\n        <Modal movie={movieInfo} open={visible} onClose={this.handleClose} />\n      </Box>\n    );\n  }\n}\n\nexport default Screen;\n"]},"metadata":{},"sourceType":"module"}